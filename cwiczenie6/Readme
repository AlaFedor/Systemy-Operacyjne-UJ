========================================================================
Autor: Alicja Fedor,                               Krakow, 07.05.2024
========================================================================

* Zawartosc:
============

Katalog cwiczenie6 zawiera:
--------------------------------------------------------------------
CWICZENIE 6: Wzajemne Wykluczanie dla Procesow: Semafory 
Przy pomocy semaforow nazwanych standardu POSIX zaimplementowac zadanie
wzajemnego wykluczania dla procesow podane w pseudokodzie na koncu podrozdzialu 5.1. Czas operacji na wspolnym zasobie symulowac uzywajac np. funkcji sleep. Dla
demonstracji poprawnosci dzialania programu uzyc odpowiednich komunikatow wypisywanych przez poszczegolne procesy przed, w trakcie i po sekcji krytycznej oraz funkcji
podajacej wartosc semafora. Pamietac o zainicjowaniu semafora odpowiednia wartoscia zaraz po jego utworzeniu.
 Stworzyc wlasna biblioteke prostych w uzyciu funkcji do tworzenia, otwierania, uzyskiwania wartosci, operowania, zamykania i usuwania semafora  korzystajcych z
odpowiednich funkcji systemowych/bibliotecznych i zawierajacych obsluge bledow. Funkcje do tworzenia i otwierania semafora niech zwracaja jego adres w przypadku
sukcesu, a wskaznik NULL w przypadku bledu, natomiast pozostale funkcje niech w przypadku sukcesu zwracaja wartosc 1, a w przypadku bledu wartosc 0. Wywolywac
te funkcje jako argumenty makra assert w miejscach, gdzie nie trzeba usuwac semafora w przypadku bledu, a tam, gdzie semafor powinien byc usuniety w takiej sytuacji, uzyc funkcji exit wypisujac wczesniej odpowiedni komunikat z podaniem azwy pliku oraz numeru linii (stale __FILE__ i __LINE__ ).
• Napisac specjalny program do powielania procesow realizujacych wzajemne wykluczanie – w oparciu o funkcje fork i execlp (nazwe programu do inicjowania procesow, liczbe procesow oraz liczbe sekcji krytycznych/prywatnych kazdego procesu przekazywac przez argumenty programu ,,powielacza”). Program ten powinien na poczatku utworzyc i zainicjowac semafor, a na koncu – kiedy wszystkie jego procesy potomne zakoncza swoje dzialanie – usunac go.
• Semafor usuwac w funkcji rejestrowanej przez funkcje atexit (zwrocic uwage, kiedy nalezy wywolac funkcje exit, a kiedy _exit). Dodac rowniez mozliwosc usuwania
semafora w funkcji obslugi sygnalu SIGINT, na wypadek gdyby program trzeba bylo zakonczyc sekwencja klawiszy Ctrl-C. W celu weryfikacji poprawnosci wzajemnego wykluczania procesow niech program
,,powielacz" na samym poczatku stworzy plik tekstowy numer.txt i wpisze w nim numer o wartosci 0 (zero), a program implementujacy wzajemne wykluczanie w swojej sekcji krytycznej odczytuje wartosc zapisanego w tym pliku numeru, nastepnie zwieksza go o 1 i po losowej (np. funkcja rand) chwili czasu zapisuje z powrotem do pliku. Po zakonczeniu dzialania wszystkich procesow realizujacych wzajemne wykluczanie proces ,,powielacz” powinien sprawdzic poprawnosc koncowego numeru zapisanego w pliku i wypisac odpowiedni komunikat.
! Sprawdzic, jaka bedzie koncowa wartosc numeru bez uzycia sekcji krytycznej.

------------------------------------------------------------------------

* Jak uruchomic programy:
=========================

Katalog zawiera program Makefile do kompilacji, linkowania
i uruchamiania powyzszych programow, a takze czyszczenia katalogu 
i jego archiwizacji.

-> Aby uruchomic program, nalezy wykonac komende:
	make all
	nastepnie wpisac ./powielacz.x ./procesy.x liczba_procesow liczba_sekcji_krytycznych


-> Aby wyczyscic zawartosc katalogu (usunac zbedne pliki), nalezy wykonac:
       make clean

-> W celu archiwizacji oraz kompresji katalogu nalezy wykonac:
       make tar

========================================================================
Odpowiedzi do pytan:
